
Lab7_PartB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000616  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000080  00802000  00000616  000006aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00802080  00802080  0000072a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000072a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000075c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000079c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b1d  00000000  00000000  000007d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000181  00000000  00000000  000012f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000014d  00000000  00000000  00001472  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  000015c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000075f  00000000  00000000  0000164c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000e7  00000000  00000000  00001dab  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001e92  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
   8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
   c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  10:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  14:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  18:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  1c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  20:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  24:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  28:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  2c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  30:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  34:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  38:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  3c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  40:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  44:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  48:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  4c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  50:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  54:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  58:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  5c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  60:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  64:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  68:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  6c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  70:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  74:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  78:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  7c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  80:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  84:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  88:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  8c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  90:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  94:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  98:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  9c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  a0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  a4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  a8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  ac:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  b0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  b4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  b8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  bc:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__vector_47>
  c0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  c4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  c8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  cc:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  d0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  d4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  d8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  dc:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  e0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  e4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  e8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  ec:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  f0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  f4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  f8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
  fc:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 100:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 104:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 108:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 10c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 110:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 114:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 118:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 11c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 120:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 124:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 128:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 12c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 130:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 134:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 138:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 13c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 140:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 144:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 148:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 14c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 150:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 154:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 158:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 15c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 160:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 164:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 168:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 16c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 170:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 174:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 178:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 17c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 180:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 184:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 188:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 18c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 190:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 194:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 198:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 19c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1a0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1a4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1a8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1ac:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1b0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1b4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1b8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1bc:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1c0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1c4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1c8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1cc:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1d0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1d4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1d8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1dc:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1e0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1e4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1e8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1ec:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1f0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1f4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
 1f8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	10 e2       	ldi	r17, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	e6 e1       	ldi	r30, 0x16	; 22
 21c:	f6 e0       	ldi	r31, 0x06	; 6
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	a0 38       	cpi	r26, 0x80	; 128
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59

00000230 <__do_clear_bss>:
 230:	20 e2       	ldi	r18, 0x20	; 32
 232:	a0 e8       	ldi	r26, 0x80	; 128
 234:	b0 e2       	ldi	r27, 0x20	; 32
 236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
 238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
 23a:	a2 38       	cpi	r26, 0x82	; 130
 23c:	b2 07       	cpc	r27, r18
 23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
 240:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <main>
 244:	0c 94 09 03 	jmp	0x612	; 0x612 <_exit>

00000248 <__bad_interrupt>:
 248:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000024c <init_TC>:
    init_TC(100); //duration for 64 sample/period @ 100 Hz
	while(1);
}

void init_TC(float freq)
{	
 24c:	1f 93       	push	r17
 24e:	cf 93       	push	r28
 250:	df 93       	push	r29
	//PORTE_DIR= 1;
	
	TCE0.CTRLA = TC_CLKSEL_DIV2_gc; //divide clock by 2
 252:	c0 e0       	ldi	r28, 0x00	; 0
 254:	da e0       	ldi	r29, 0x0A	; 10
 256:	22 e0       	ldi	r18, 0x02	; 2
 258:	28 83       	st	Y, r18
	TCE0.CTRLB = 0x0;
 25a:	19 82       	std	Y+1, r1	; 0x01
	TCE0.CTRLC = 0;
 25c:	1a 82       	std	Y+2, r1	; 0x02
	TCE0.CTRLD = 0;
 25e:	1b 82       	std	Y+3, r1	; 0x03
	TCE0.CTRLE = 0;
 260:	1c 82       	std	Y+4, r1	; 0x04
	TCE0.INTCTRLA = 1;
 262:	11 e0       	ldi	r17, 0x01	; 1
 264:	1e 83       	std	Y+6, r17	; 0x06
	TCE0.INTCTRLB = 0;
 266:	1f 82       	std	Y+7, r1	; 0x07
	TCE0.PER =  (uint16_t) (((((float) 2000000.0)/2.0)/(freq*64.0)));
 268:	20 e0       	ldi	r18, 0x00	; 0
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	40 e8       	ldi	r20, 0x80	; 128
 26e:	52 e4       	ldi	r21, 0x42	; 66
 270:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
 274:	9b 01       	movw	r18, r22
 276:	ac 01       	movw	r20, r24
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	74 e2       	ldi	r23, 0x24	; 36
 27c:	84 e7       	ldi	r24, 0x74	; 116
 27e:	99 e4       	ldi	r25, 0x49	; 73
 280:	0e 94 aa 01 	call	0x354	; 0x354 <__divsf3>
 284:	0e 94 1c 02 	call	0x438	; 0x438 <__fixunssfsi>
 288:	6e a3       	std	Y+38, r22	; 0x26
 28a:	7f a3       	std	Y+39, r23	; 0x27

	PMIC.CTRL = 1; //enable low level interrupt
 28c:	10 93 a2 00 	sts	0x00A2, r17
	
	sei(); //enble gloabal interrupts
 290:	78 94       	sei
}
 292:	df 91       	pop	r29
 294:	cf 91       	pop	r28
 296:	1f 91       	pop	r17
 298:	08 95       	ret

0000029a <init_DAC>:

void init_DAC(void)
{
	PORTB_DIRCLR = PIN0_bm; //set AREFB as 2.5V input
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	80 93 22 06 	sts	0x0622, r24
	PORTB_DIRSET = PIN2_bm; //set DACB0 to output
 2a0:	84 e0       	ldi	r24, 0x04	; 4
 2a2:	80 93 21 06 	sts	0x0621, r24
	DACB.CTRLC = DAC_REFSEL_AREFB_gc; //set AREFB 
 2a6:	e0 e2       	ldi	r30, 0x20	; 32
 2a8:	f3 e0       	ldi	r31, 0x03	; 3
 2aa:	88 e1       	ldi	r24, 0x18	; 24
 2ac:	82 83       	std	Z+2, r24	; 0x02
	DACB.CTRLB = DAC_CHSEL_SINGLE_gc; //rest not really needed
 2ae:	11 82       	std	Z+1, r1	; 0x01
	DACB.CTRLA = DAC_CH0EN_bm | DAC_ENABLE_bm; //enable DAC
 2b0:	85 e0       	ldi	r24, 0x05	; 5
 2b2:	80 83       	st	Z, r24
 2b4:	08 95       	ret

000002b6 <main>:
void init_DAC(void);
void init_TC(float freq);

int main(void)
{
	init_DAC();
 2b6:	0e 94 4d 01 	call	0x29a	; 0x29a <init_DAC>
    init_TC(100); //duration for 64 sample/period @ 100 Hz
 2ba:	60 e0       	ldi	r22, 0x00	; 0
 2bc:	70 e0       	ldi	r23, 0x00	; 0
 2be:	88 ec       	ldi	r24, 0xC8	; 200
 2c0:	92 e4       	ldi	r25, 0x42	; 66
 2c2:	0e 94 26 01 	call	0x24c	; 0x24c <init_TC>
	while(1);
 2c6:	ff cf       	rjmp	.-2      	; 0x2c6 <main+0x10>

000002c8 <__vector_47>:
	DACB.CTRLB = DAC_CHSEL_SINGLE_gc; //rest not really needed
	DACB.CTRLA = DAC_CH0EN_bm | DAC_ENABLE_bm; //enable DAC
}

ISR(TCE0_OVF_vect)
{
 2c8:	1f 92       	push	r1
 2ca:	0f 92       	push	r0
 2cc:	0f b6       	in	r0, 0x3f	; 63
 2ce:	0f 92       	push	r0
 2d0:	11 24       	eor	r1, r1
 2d2:	08 b6       	in	r0, 0x38	; 56
 2d4:	0f 92       	push	r0
 2d6:	18 be       	out	0x38, r1	; 56
 2d8:	0b b6       	in	r0, 0x3b	; 59
 2da:	0f 92       	push	r0
 2dc:	1b be       	out	0x3b, r1	; 59
 2de:	2f 93       	push	r18
 2e0:	3f 93       	push	r19
 2e2:	8f 93       	push	r24
 2e4:	9f 93       	push	r25
 2e6:	ef 93       	push	r30
 2e8:	ff 93       	push	r31
	//PORTE_OUTTGL = 1; //toggle pin 1 (for checking 100 Hz frequency)
	while((DACB.STATUS & 1) == 0); //make sure DAC is ready
 2ea:	e0 e2       	ldi	r30, 0x20	; 32
 2ec:	f3 e0       	ldi	r31, 0x03	; 3
 2ee:	85 81       	ldd	r24, Z+5	; 0x05
 2f0:	80 ff       	sbrs	r24, 0
 2f2:	fd cf       	rjmp	.-6      	; 0x2ee <__vector_47+0x26>
	DACB.CH0DATA = wave[i_wave++]; //set next sample in DAC
 2f4:	80 91 80 20 	lds	r24, 0x2080
 2f8:	90 91 81 20 	lds	r25, 0x2081
 2fc:	9c 01       	movw	r18, r24
 2fe:	2f 5f       	subi	r18, 0xFF	; 255
 300:	3f 4f       	sbci	r19, 0xFF	; 255
 302:	20 93 80 20 	sts	0x2080, r18
 306:	30 93 81 20 	sts	0x2081, r19
 30a:	88 0f       	add	r24, r24
 30c:	99 1f       	adc	r25, r25
 30e:	fc 01       	movw	r30, r24
 310:	e0 50       	subi	r30, 0x00	; 0
 312:	f0 4e       	sbci	r31, 0xE0	; 224
 314:	80 81       	ld	r24, Z
 316:	91 81       	ldd	r25, Z+1	; 0x01
 318:	80 93 38 03 	sts	0x0338, r24
 31c:	90 93 39 03 	sts	0x0339, r25
	if(i_wave == 64)	//restart period if needed
 320:	80 91 80 20 	lds	r24, 0x2080
 324:	90 91 81 20 	lds	r25, 0x2081
 328:	80 34       	cpi	r24, 0x40	; 64
 32a:	91 05       	cpc	r25, r1
 32c:	21 f4       	brne	.+8      	; 0x336 <__vector_47+0x6e>
		i_wave = 0;
 32e:	10 92 80 20 	sts	0x2080, r1
 332:	10 92 81 20 	sts	0x2081, r1
	
 336:	ff 91       	pop	r31
 338:	ef 91       	pop	r30
 33a:	9f 91       	pop	r25
 33c:	8f 91       	pop	r24
 33e:	3f 91       	pop	r19
 340:	2f 91       	pop	r18
 342:	0f 90       	pop	r0
 344:	0b be       	out	0x3b, r0	; 59
 346:	0f 90       	pop	r0
 348:	08 be       	out	0x38, r0	; 56
 34a:	0f 90       	pop	r0
 34c:	0f be       	out	0x3f, r0	; 63
 34e:	0f 90       	pop	r0
 350:	1f 90       	pop	r1
 352:	18 95       	reti

00000354 <__divsf3>:
 354:	0e 94 be 01 	call	0x37c	; 0x37c <__divsf3x>
 358:	0c 94 62 02 	jmp	0x4c4	; 0x4c4 <__fp_round>
 35c:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__fp_pscB>
 360:	58 f0       	brcs	.+22     	; 0x378 <__divsf3+0x24>
 362:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__fp_pscA>
 366:	40 f0       	brcs	.+16     	; 0x378 <__divsf3+0x24>
 368:	29 f4       	brne	.+10     	; 0x374 <__divsf3+0x20>
 36a:	5f 3f       	cpi	r21, 0xFF	; 255
 36c:	29 f0       	breq	.+10     	; 0x378 <__divsf3+0x24>
 36e:	0c 94 4b 02 	jmp	0x496	; 0x496 <__fp_inf>
 372:	51 11       	cpse	r21, r1
 374:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_szero>
 378:	0c 94 51 02 	jmp	0x4a2	; 0x4a2 <__fp_nan>

0000037c <__divsf3x>:
 37c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <__fp_split3>
 380:	68 f3       	brcs	.-38     	; 0x35c <__divsf3+0x8>

00000382 <__divsf3_pse>:
 382:	99 23       	and	r25, r25
 384:	b1 f3       	breq	.-20     	; 0x372 <__divsf3+0x1e>
 386:	55 23       	and	r21, r21
 388:	91 f3       	breq	.-28     	; 0x36e <__divsf3+0x1a>
 38a:	95 1b       	sub	r25, r21
 38c:	55 0b       	sbc	r21, r21
 38e:	bb 27       	eor	r27, r27
 390:	aa 27       	eor	r26, r26
 392:	62 17       	cp	r22, r18
 394:	73 07       	cpc	r23, r19
 396:	84 07       	cpc	r24, r20
 398:	38 f0       	brcs	.+14     	; 0x3a8 <__divsf3_pse+0x26>
 39a:	9f 5f       	subi	r25, 0xFF	; 255
 39c:	5f 4f       	sbci	r21, 0xFF	; 255
 39e:	22 0f       	add	r18, r18
 3a0:	33 1f       	adc	r19, r19
 3a2:	44 1f       	adc	r20, r20
 3a4:	aa 1f       	adc	r26, r26
 3a6:	a9 f3       	breq	.-22     	; 0x392 <__divsf3_pse+0x10>
 3a8:	35 d0       	rcall	.+106    	; 0x414 <__divsf3_pse+0x92>
 3aa:	0e 2e       	mov	r0, r30
 3ac:	3a f0       	brmi	.+14     	; 0x3bc <__divsf3_pse+0x3a>
 3ae:	e0 e8       	ldi	r30, 0x80	; 128
 3b0:	32 d0       	rcall	.+100    	; 0x416 <__divsf3_pse+0x94>
 3b2:	91 50       	subi	r25, 0x01	; 1
 3b4:	50 40       	sbci	r21, 0x00	; 0
 3b6:	e6 95       	lsr	r30
 3b8:	00 1c       	adc	r0, r0
 3ba:	ca f7       	brpl	.-14     	; 0x3ae <__divsf3_pse+0x2c>
 3bc:	2b d0       	rcall	.+86     	; 0x414 <__divsf3_pse+0x92>
 3be:	fe 2f       	mov	r31, r30
 3c0:	29 d0       	rcall	.+82     	; 0x414 <__divsf3_pse+0x92>
 3c2:	66 0f       	add	r22, r22
 3c4:	77 1f       	adc	r23, r23
 3c6:	88 1f       	adc	r24, r24
 3c8:	bb 1f       	adc	r27, r27
 3ca:	26 17       	cp	r18, r22
 3cc:	37 07       	cpc	r19, r23
 3ce:	48 07       	cpc	r20, r24
 3d0:	ab 07       	cpc	r26, r27
 3d2:	b0 e8       	ldi	r27, 0x80	; 128
 3d4:	09 f0       	breq	.+2      	; 0x3d8 <__divsf3_pse+0x56>
 3d6:	bb 0b       	sbc	r27, r27
 3d8:	80 2d       	mov	r24, r0
 3da:	bf 01       	movw	r22, r30
 3dc:	ff 27       	eor	r31, r31
 3de:	93 58       	subi	r25, 0x83	; 131
 3e0:	5f 4f       	sbci	r21, 0xFF	; 255
 3e2:	3a f0       	brmi	.+14     	; 0x3f2 <__divsf3_pse+0x70>
 3e4:	9e 3f       	cpi	r25, 0xFE	; 254
 3e6:	51 05       	cpc	r21, r1
 3e8:	78 f0       	brcs	.+30     	; 0x408 <__divsf3_pse+0x86>
 3ea:	0c 94 4b 02 	jmp	0x496	; 0x496 <__fp_inf>
 3ee:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_szero>
 3f2:	5f 3f       	cpi	r21, 0xFF	; 255
 3f4:	e4 f3       	brlt	.-8      	; 0x3ee <__divsf3_pse+0x6c>
 3f6:	98 3e       	cpi	r25, 0xE8	; 232
 3f8:	d4 f3       	brlt	.-12     	; 0x3ee <__divsf3_pse+0x6c>
 3fa:	86 95       	lsr	r24
 3fc:	77 95       	ror	r23
 3fe:	67 95       	ror	r22
 400:	b7 95       	ror	r27
 402:	f7 95       	ror	r31
 404:	9f 5f       	subi	r25, 0xFF	; 255
 406:	c9 f7       	brne	.-14     	; 0x3fa <__divsf3_pse+0x78>
 408:	88 0f       	add	r24, r24
 40a:	91 1d       	adc	r25, r1
 40c:	96 95       	lsr	r25
 40e:	87 95       	ror	r24
 410:	97 f9       	bld	r25, 7
 412:	08 95       	ret
 414:	e1 e0       	ldi	r30, 0x01	; 1
 416:	66 0f       	add	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	88 1f       	adc	r24, r24
 41c:	bb 1f       	adc	r27, r27
 41e:	62 17       	cp	r22, r18
 420:	73 07       	cpc	r23, r19
 422:	84 07       	cpc	r24, r20
 424:	ba 07       	cpc	r27, r26
 426:	20 f0       	brcs	.+8      	; 0x430 <__divsf3_pse+0xae>
 428:	62 1b       	sub	r22, r18
 42a:	73 0b       	sbc	r23, r19
 42c:	84 0b       	sbc	r24, r20
 42e:	ba 0b       	sbc	r27, r26
 430:	ee 1f       	adc	r30, r30
 432:	88 f7       	brcc	.-30     	; 0x416 <__divsf3_pse+0x94>
 434:	e0 95       	com	r30
 436:	08 95       	ret

00000438 <__fixunssfsi>:
 438:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fp_splitA>
 43c:	88 f0       	brcs	.+34     	; 0x460 <__fixunssfsi+0x28>
 43e:	9f 57       	subi	r25, 0x7F	; 127
 440:	98 f0       	brcs	.+38     	; 0x468 <__fixunssfsi+0x30>
 442:	b9 2f       	mov	r27, r25
 444:	99 27       	eor	r25, r25
 446:	b7 51       	subi	r27, 0x17	; 23
 448:	b0 f0       	brcs	.+44     	; 0x476 <__fixunssfsi+0x3e>
 44a:	e1 f0       	breq	.+56     	; 0x484 <__fixunssfsi+0x4c>
 44c:	66 0f       	add	r22, r22
 44e:	77 1f       	adc	r23, r23
 450:	88 1f       	adc	r24, r24
 452:	99 1f       	adc	r25, r25
 454:	1a f0       	brmi	.+6      	; 0x45c <__fixunssfsi+0x24>
 456:	ba 95       	dec	r27
 458:	c9 f7       	brne	.-14     	; 0x44c <__fixunssfsi+0x14>
 45a:	14 c0       	rjmp	.+40     	; 0x484 <__fixunssfsi+0x4c>
 45c:	b1 30       	cpi	r27, 0x01	; 1
 45e:	91 f0       	breq	.+36     	; 0x484 <__fixunssfsi+0x4c>
 460:	0e 94 95 02 	call	0x52a	; 0x52a <__fp_zero>
 464:	b1 e0       	ldi	r27, 0x01	; 1
 466:	08 95       	ret
 468:	0c 94 95 02 	jmp	0x52a	; 0x52a <__fp_zero>
 46c:	67 2f       	mov	r22, r23
 46e:	78 2f       	mov	r23, r24
 470:	88 27       	eor	r24, r24
 472:	b8 5f       	subi	r27, 0xF8	; 248
 474:	39 f0       	breq	.+14     	; 0x484 <__fixunssfsi+0x4c>
 476:	b9 3f       	cpi	r27, 0xF9	; 249
 478:	cc f3       	brlt	.-14     	; 0x46c <__fixunssfsi+0x34>
 47a:	86 95       	lsr	r24
 47c:	77 95       	ror	r23
 47e:	67 95       	ror	r22
 480:	b3 95       	inc	r27
 482:	d9 f7       	brne	.-10     	; 0x47a <__fixunssfsi+0x42>
 484:	3e f4       	brtc	.+14     	; 0x494 <__fixunssfsi+0x5c>
 486:	90 95       	com	r25
 488:	80 95       	com	r24
 48a:	70 95       	com	r23
 48c:	61 95       	neg	r22
 48e:	7f 4f       	sbci	r23, 0xFF	; 255
 490:	8f 4f       	sbci	r24, 0xFF	; 255
 492:	9f 4f       	sbci	r25, 0xFF	; 255
 494:	08 95       	ret

00000496 <__fp_inf>:
 496:	97 f9       	bld	r25, 7
 498:	9f 67       	ori	r25, 0x7F	; 127
 49a:	80 e8       	ldi	r24, 0x80	; 128
 49c:	70 e0       	ldi	r23, 0x00	; 0
 49e:	60 e0       	ldi	r22, 0x00	; 0
 4a0:	08 95       	ret

000004a2 <__fp_nan>:
 4a2:	9f ef       	ldi	r25, 0xFF	; 255
 4a4:	80 ec       	ldi	r24, 0xC0	; 192
 4a6:	08 95       	ret

000004a8 <__fp_pscA>:
 4a8:	00 24       	eor	r0, r0
 4aa:	0a 94       	dec	r0
 4ac:	16 16       	cp	r1, r22
 4ae:	17 06       	cpc	r1, r23
 4b0:	18 06       	cpc	r1, r24
 4b2:	09 06       	cpc	r0, r25
 4b4:	08 95       	ret

000004b6 <__fp_pscB>:
 4b6:	00 24       	eor	r0, r0
 4b8:	0a 94       	dec	r0
 4ba:	12 16       	cp	r1, r18
 4bc:	13 06       	cpc	r1, r19
 4be:	14 06       	cpc	r1, r20
 4c0:	05 06       	cpc	r0, r21
 4c2:	08 95       	ret

000004c4 <__fp_round>:
 4c4:	09 2e       	mov	r0, r25
 4c6:	03 94       	inc	r0
 4c8:	00 0c       	add	r0, r0
 4ca:	11 f4       	brne	.+4      	; 0x4d0 <__fp_round+0xc>
 4cc:	88 23       	and	r24, r24
 4ce:	52 f0       	brmi	.+20     	; 0x4e4 <__fp_round+0x20>
 4d0:	bb 0f       	add	r27, r27
 4d2:	40 f4       	brcc	.+16     	; 0x4e4 <__fp_round+0x20>
 4d4:	bf 2b       	or	r27, r31
 4d6:	11 f4       	brne	.+4      	; 0x4dc <__fp_round+0x18>
 4d8:	60 ff       	sbrs	r22, 0
 4da:	04 c0       	rjmp	.+8      	; 0x4e4 <__fp_round+0x20>
 4dc:	6f 5f       	subi	r22, 0xFF	; 255
 4de:	7f 4f       	sbci	r23, 0xFF	; 255
 4e0:	8f 4f       	sbci	r24, 0xFF	; 255
 4e2:	9f 4f       	sbci	r25, 0xFF	; 255
 4e4:	08 95       	ret

000004e6 <__fp_split3>:
 4e6:	57 fd       	sbrc	r21, 7
 4e8:	90 58       	subi	r25, 0x80	; 128
 4ea:	44 0f       	add	r20, r20
 4ec:	55 1f       	adc	r21, r21
 4ee:	59 f0       	breq	.+22     	; 0x506 <__fp_splitA+0x10>
 4f0:	5f 3f       	cpi	r21, 0xFF	; 255
 4f2:	71 f0       	breq	.+28     	; 0x510 <__fp_splitA+0x1a>
 4f4:	47 95       	ror	r20

000004f6 <__fp_splitA>:
 4f6:	88 0f       	add	r24, r24
 4f8:	97 fb       	bst	r25, 7
 4fa:	99 1f       	adc	r25, r25
 4fc:	61 f0       	breq	.+24     	; 0x516 <__fp_splitA+0x20>
 4fe:	9f 3f       	cpi	r25, 0xFF	; 255
 500:	79 f0       	breq	.+30     	; 0x520 <__fp_splitA+0x2a>
 502:	87 95       	ror	r24
 504:	08 95       	ret
 506:	12 16       	cp	r1, r18
 508:	13 06       	cpc	r1, r19
 50a:	14 06       	cpc	r1, r20
 50c:	55 1f       	adc	r21, r21
 50e:	f2 cf       	rjmp	.-28     	; 0x4f4 <__fp_split3+0xe>
 510:	46 95       	lsr	r20
 512:	f1 df       	rcall	.-30     	; 0x4f6 <__fp_splitA>
 514:	08 c0       	rjmp	.+16     	; 0x526 <__fp_splitA+0x30>
 516:	16 16       	cp	r1, r22
 518:	17 06       	cpc	r1, r23
 51a:	18 06       	cpc	r1, r24
 51c:	99 1f       	adc	r25, r25
 51e:	f1 cf       	rjmp	.-30     	; 0x502 <__fp_splitA+0xc>
 520:	86 95       	lsr	r24
 522:	71 05       	cpc	r23, r1
 524:	61 05       	cpc	r22, r1
 526:	08 94       	sec
 528:	08 95       	ret

0000052a <__fp_zero>:
 52a:	e8 94       	clt

0000052c <__fp_szero>:
 52c:	bb 27       	eor	r27, r27
 52e:	66 27       	eor	r22, r22
 530:	77 27       	eor	r23, r23
 532:	cb 01       	movw	r24, r22
 534:	97 f9       	bld	r25, 7
 536:	08 95       	ret

00000538 <__mulsf3>:
 538:	0e 94 af 02 	call	0x55e	; 0x55e <__mulsf3x>
 53c:	0c 94 62 02 	jmp	0x4c4	; 0x4c4 <__fp_round>
 540:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__fp_pscA>
 544:	38 f0       	brcs	.+14     	; 0x554 <__mulsf3+0x1c>
 546:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__fp_pscB>
 54a:	20 f0       	brcs	.+8      	; 0x554 <__mulsf3+0x1c>
 54c:	95 23       	and	r25, r21
 54e:	11 f0       	breq	.+4      	; 0x554 <__mulsf3+0x1c>
 550:	0c 94 4b 02 	jmp	0x496	; 0x496 <__fp_inf>
 554:	0c 94 51 02 	jmp	0x4a2	; 0x4a2 <__fp_nan>
 558:	11 24       	eor	r1, r1
 55a:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_szero>

0000055e <__mulsf3x>:
 55e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <__fp_split3>
 562:	70 f3       	brcs	.-36     	; 0x540 <__mulsf3+0x8>

00000564 <__mulsf3_pse>:
 564:	95 9f       	mul	r25, r21
 566:	c1 f3       	breq	.-16     	; 0x558 <__mulsf3+0x20>
 568:	95 0f       	add	r25, r21
 56a:	50 e0       	ldi	r21, 0x00	; 0
 56c:	55 1f       	adc	r21, r21
 56e:	62 9f       	mul	r22, r18
 570:	f0 01       	movw	r30, r0
 572:	72 9f       	mul	r23, r18
 574:	bb 27       	eor	r27, r27
 576:	f0 0d       	add	r31, r0
 578:	b1 1d       	adc	r27, r1
 57a:	63 9f       	mul	r22, r19
 57c:	aa 27       	eor	r26, r26
 57e:	f0 0d       	add	r31, r0
 580:	b1 1d       	adc	r27, r1
 582:	aa 1f       	adc	r26, r26
 584:	64 9f       	mul	r22, r20
 586:	66 27       	eor	r22, r22
 588:	b0 0d       	add	r27, r0
 58a:	a1 1d       	adc	r26, r1
 58c:	66 1f       	adc	r22, r22
 58e:	82 9f       	mul	r24, r18
 590:	22 27       	eor	r18, r18
 592:	b0 0d       	add	r27, r0
 594:	a1 1d       	adc	r26, r1
 596:	62 1f       	adc	r22, r18
 598:	73 9f       	mul	r23, r19
 59a:	b0 0d       	add	r27, r0
 59c:	a1 1d       	adc	r26, r1
 59e:	62 1f       	adc	r22, r18
 5a0:	83 9f       	mul	r24, r19
 5a2:	a0 0d       	add	r26, r0
 5a4:	61 1d       	adc	r22, r1
 5a6:	22 1f       	adc	r18, r18
 5a8:	74 9f       	mul	r23, r20
 5aa:	33 27       	eor	r19, r19
 5ac:	a0 0d       	add	r26, r0
 5ae:	61 1d       	adc	r22, r1
 5b0:	23 1f       	adc	r18, r19
 5b2:	84 9f       	mul	r24, r20
 5b4:	60 0d       	add	r22, r0
 5b6:	21 1d       	adc	r18, r1
 5b8:	82 2f       	mov	r24, r18
 5ba:	76 2f       	mov	r23, r22
 5bc:	6a 2f       	mov	r22, r26
 5be:	11 24       	eor	r1, r1
 5c0:	9f 57       	subi	r25, 0x7F	; 127
 5c2:	50 40       	sbci	r21, 0x00	; 0
 5c4:	9a f0       	brmi	.+38     	; 0x5ec <__mulsf3_pse+0x88>
 5c6:	f1 f0       	breq	.+60     	; 0x604 <__mulsf3_pse+0xa0>
 5c8:	88 23       	and	r24, r24
 5ca:	4a f0       	brmi	.+18     	; 0x5de <__mulsf3_pse+0x7a>
 5cc:	ee 0f       	add	r30, r30
 5ce:	ff 1f       	adc	r31, r31
 5d0:	bb 1f       	adc	r27, r27
 5d2:	66 1f       	adc	r22, r22
 5d4:	77 1f       	adc	r23, r23
 5d6:	88 1f       	adc	r24, r24
 5d8:	91 50       	subi	r25, 0x01	; 1
 5da:	50 40       	sbci	r21, 0x00	; 0
 5dc:	a9 f7       	brne	.-22     	; 0x5c8 <__mulsf3_pse+0x64>
 5de:	9e 3f       	cpi	r25, 0xFE	; 254
 5e0:	51 05       	cpc	r21, r1
 5e2:	80 f0       	brcs	.+32     	; 0x604 <__mulsf3_pse+0xa0>
 5e4:	0c 94 4b 02 	jmp	0x496	; 0x496 <__fp_inf>
 5e8:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_szero>
 5ec:	5f 3f       	cpi	r21, 0xFF	; 255
 5ee:	e4 f3       	brlt	.-8      	; 0x5e8 <__mulsf3_pse+0x84>
 5f0:	98 3e       	cpi	r25, 0xE8	; 232
 5f2:	d4 f3       	brlt	.-12     	; 0x5e8 <__mulsf3_pse+0x84>
 5f4:	86 95       	lsr	r24
 5f6:	77 95       	ror	r23
 5f8:	67 95       	ror	r22
 5fa:	b7 95       	ror	r27
 5fc:	f7 95       	ror	r31
 5fe:	e7 95       	ror	r30
 600:	9f 5f       	subi	r25, 0xFF	; 255
 602:	c1 f7       	brne	.-16     	; 0x5f4 <__mulsf3_pse+0x90>
 604:	fe 2b       	or	r31, r30
 606:	88 0f       	add	r24, r24
 608:	91 1d       	adc	r25, r1
 60a:	96 95       	lsr	r25
 60c:	87 95       	ror	r24
 60e:	97 f9       	bld	r25, 7
 610:	08 95       	ret

00000612 <_exit>:
 612:	f8 94       	cli

00000614 <__stop_program>:
 614:	ff cf       	rjmp	.-2      	; 0x614 <__stop_program>
