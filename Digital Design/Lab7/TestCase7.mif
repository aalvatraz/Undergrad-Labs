Depth = 256;
Width = 32;
Address_radix = hex;
Data_radix = bin;
% Program RAM Data %
Content
  Begin							-- This program will call a subroutine
							-- beq, jal, jr, j 

00 : 00001100000000000000000000000011	;		-- jal  C		 / 	jump to address 8 and $ra= PC + 4      // $ra/r31 = 4
04 : 00001000000000000000000000000001	;		-- j  4			 / 	infinite loop
08 : 00000000000000000000000000000000   ;               -- blank
0C : 00000000000000001000100000100001	;		-- add $s1, $zero, $zero / 	$s1/r17 = 0;	
10 : 10001110001100100000000000101100	;		-- lw $s2, 2C($s1)	 / 	load word in adress 2C + s1 to s2	//s2/r18 = 1
14 : 00010010010000000000000000000011	;		-- beq $s2, $zero, 24	 / 	branch to 24 if s2 equal to 0
18 : 00100110001100010000000000000100	;		-- addiu $s1, $s1, 4 	 / 	calculate the new address s1 = s1 + 4
1C : 00000010011100101001100000100001	;		-- add   $s3, $s3, $s2	 / 	add the number to the accumulator s3 = s3 + s2		
20 : 00001000000000000000000000000100	;		-- j 10		         / 	Jump to address 10
24 : 10101100000100111111111111111100	;		-- sw $s3, FFFC($zero)	 /      store s3 to the outport1
28 : 00000011111000000000000000001000	;		-- jr $ra		 / 	PC= $ra      				// PC = 4
2C : 00000000000000000000000000000001	;		-- 1
30 : 00000000000000000000000000000010   ;		-- 2	
34 : 00000000000000000000000000000011   ;		-- 3
38 : 00000000000000000000000000000100   ;		-- 4
3C : 00000000000000000000000000000101   ;		-- 5
40 : 00000000000000000000000000000110   ;		-- 6
44 : 00000000000000000000000000000111   ;		-- 7
48 : 00000000000000000000000000001000   ;		-- 8
4C : 00000000000000000000000000001001   ;		-- 9
50 : 00000000000000000000000000001010   ;		-- 10
52 : 00000000000000000000000000000000	;		-- 0

End;